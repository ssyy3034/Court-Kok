services:
  # Flask 웹 애플리케이션 서비스
  flask-app:
    build: .
    ports:
      - "5001:5001"
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/prometheus_metrics
      - prometheus_multiproc_dir=/prometheus_metrics
      - MONGO_HOST=mongodb
      - MONGO_USER=root
      - MONGO_PASS=password
    volumes:
      - prometheus_metrics_volume:/prometheus_metrics
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    command:
      - mongod
      - --auth
    healthcheck: # <--- 이 부분을 추가합니다.
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - flask-app
    networks:
      - app-network

  # Grafana 서비스
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  mongodb_data:
  grafana_data:
  prometheus_metrics_volume: {}

networks:
  app-network: